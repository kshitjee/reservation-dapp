{
  "address": "0x3820E8578fafb05442743f1A7EdfcF1F0290145f",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eventImplementation",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auction__BidTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__NotEnoughFunds",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "idsLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "suppliesLength",
          "type": "uint256"
        }
      ],
      "name": "Auction__TokenIdsDoNotMatchTokenSupplies",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__UnauthorizedCaller",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "eventAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "baseMetaDataURI",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "organizer",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "baseMetadataURI",
              "type": "string"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenSupplies",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenStatus",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "minBids",
              "type": "uint256[]"
            }
          ],
          "indexed": false,
          "internalType": "struct Auction.Event",
          "name": "event0",
          "type": "tuple"
        }
      ],
      "name": "EventListed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountOfTokens",
          "type": "uint256"
        }
      ],
      "name": "buyNow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_baseMetadataURI",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenSupplies",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_tokenStatus",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_minBids",
          "type": "uint256[]"
        }
      ],
      "name": "createEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eventAddress",
          "type": "address"
        }
      ],
      "name": "settleAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eventAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newBid",
          "type": "uint256"
        }
      ],
      "name": "updateMinBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x12261026e7390b5da41862d3439678a0e7c2b85c2dda204f4f4636390cdfbe7c",
  "receipt": {
    "to": null,
    "from": "0x0c670AcA9AA0285B961F1D4AB7D4e462C7982311",
    "contractAddress": "0x3820E8578fafb05442743f1A7EdfcF1F0290145f",
    "transactionIndex": 8,
    "gasUsed": "1240721",
    "logsBloom": "0x
    "blockHash": "0xfd3cd6e17e49d553868c6e7069dc0f0496f8f8b615bd487cf8e0f6df761721a4",
    "transactionHash": "0x12261026e7390b5da41862d3439678a0e7c2b85c2dda204f4f4636390cdfbe7c",
    "logs": [],
    "blockNumber": 8474646,
    "cumulativeGasUsed": "7798547",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x435C7bFd1895410718fe9e190ce2050857345107"
  ],
  "numDeployments": 1,
  "solcInputHash": "2ce9c1fba6c78f86911993881cfdca67",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventImplementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auction__BidTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__NotEnoughFunds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"suppliesLength\",\"type\":\"uint256\"}],\"name\":\"Auction__TokenIdsDoNotMatchTokenSupplies\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__UnauthorizedCaller\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"eventAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"baseMetaDataURI\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseMetadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenSupplies\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenStatus\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"minBids\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct Auction.Event\",\"name\":\"event0\",\"type\":\"tuple\"}],\"name\":\"EventListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountOfTokens\",\"type\":\"uint256\"}],\"name\":\"buyNow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseMetadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenSupplies\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_tokenStatus\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_minBids\",\"type\":\"uint256[]\"}],\"name\":\"createEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventAddress\",\"type\":\"address\"}],\"name\":\"settleAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_eventAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newBid\",\"type\":\"uint256\"}],\"name\":\"updateMinBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create(0, 0x09, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\\n            // of the `implementation` address with the bytecode before the address.\\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\\n            instance := create2(0, 0x09, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(add(ptr, 0x38), deployer)\\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\\n            mstore(add(ptr, 0x14), implementation)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\\n            mstore(add(ptr, 0x58), salt)\\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\\n            predicted := keccak256(add(ptr, 0x43), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\"},\"contracts/Auction.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/* imports */\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"../interfaces/IEvent.sol\\\";\\n\\n/* errors */\\nerror Auction__TokenIdsDoNotMatchTokenSupplies(\\n  uint256 idsLength,\\n  uint256 suppliesLength\\n);\\nerror Auction__OnlyEventOwnerCanCall(address caller);\\nerror Auction__BidTooLow();\\nerror Auction__NotEnoughFunds();\\nerror Auction__UnauthorizedCaller();\\n\\ncontract Auction {\\n  /* structs and enums */\\n  struct Event {\\n    string name;\\n    address organizer;\\n    string baseMetadataURI;\\n    uint[] tokenIds;\\n    uint[] tokenSupplies;\\n    uint[] tokenStatus;\\n    uint[] minBids;\\n  }\\n\\n  /*  state variables */\\n  address immutable eventImplementation;\\n  mapping(address => Event) addrToEvent;\\n  mapping(address => address) addrToOrg;\\n  mapping(address => uint) addrToNoOfTokenTypes;\\n  mapping(address => mapping(uint => address[])) addrToIdToQueue;\\n  mapping(address => mapping(uint => uint)) addrToIdToMinBid;\\n\\n  /* events */\\n  event EventListed(\\n    address indexed eventAddress,\\n    string indexed baseMetaDataURI,\\n    Event event0\\n  );\\n\\n  /* constructor */\\n  constructor(address _eventImplementation) {\\n    eventImplementation = _eventImplementation;\\n  }\\n\\n  /* external functions */\\n  function createEvent(\\n    string memory _name,\\n    string memory _baseMetadataURI,\\n    uint256[] memory _tokenIds,\\n    uint256[] memory _tokenSupplies,\\n    uint256[] memory _tokenStatus,\\n    uint256[] memory _minBids\\n  ) external {\\n    if (_tokenIds.length != _tokenSupplies.length) {\\n      revert Auction__TokenIdsDoNotMatchTokenSupplies(\\n        _tokenIds.length,\\n        _tokenSupplies.length\\n      );\\n    }\\n    address eventAddress = Clones.clone(eventImplementation);\\n    IEvent(eventAddress).initialize(\\n      msg.sender,\\n      address(this),\\n      _baseMetadataURI\\n    );\\n    Event memory newEvent = Event(\\n      _name,\\n      address(this),\\n      _baseMetadataURI,\\n      _tokenIds,\\n      _tokenSupplies,\\n      _tokenStatus,\\n      _minBids\\n    );\\n    addrToNoOfTokenTypes[eventAddress] = _tokenIds.length;\\n    addrToEvent[eventAddress] = newEvent;\\n    addrToOrg[eventAddress] = msg.sender;\\n\\n    for (uint i = 0; i < _tokenIds.length; i++) {\\n      addrToIdToMinBid[eventAddress][i] = _minBids[i];\\n    }\\n    emit EventListed(eventAddress, _baseMetadataURI, newEvent);\\n  }\\n\\n  function updateMinBid(\\n    address _eventAddress,\\n    uint _tokenId,\\n    uint _newBid\\n  ) external {\\n    addrToIdToMinBid[_eventAddress][_tokenId] = _newBid;\\n  }\\n\\n  function placeBid(\\n    address _eventAddress,\\n    uint _tokenId,\\n    uint _amount\\n  ) external {\\n    if (_amount < addrToIdToMinBid[_eventAddress][_tokenId]) {\\n      revert Auction__BidTooLow();\\n    }\\n    if (msg.sender.balance < addrToIdToMinBid[_eventAddress][_tokenId]) {\\n      revert Auction__NotEnoughFunds();\\n    }\\n    addrToIdToQueue[_eventAddress][_tokenId].push(msg.sender);\\n  }\\n\\n  // triggered via web app by some time based event, NEED TO FIGURE PAYMENT\\n  function settleAuction(address _eventAddress) external {\\n    if (msg.sender != addrToOrg[_eventAddress]) {\\n      revert Auction__UnauthorizedCaller();\\n    }\\n    for (uint i = 0; i < addrToNoOfTokenTypes[_eventAddress]; i++) {\\n      for (uint j = 0; j < addrToIdToQueue[_eventAddress][i].length; j++) {\\n        IEvent(_eventAddress).mint(addrToIdToQueue[_eventAddress][i][j], i, 1);\\n      }\\n    }\\n  }\\n\\n  function buyNow(\\n    address _eventAddress,\\n    uint _tokenId,\\n    uint _amountOfTokens\\n  ) external {}\\n\\n  // function transferBalance() external {}\\n  // function deleteAuction() external {}\\n}\\n\",\"keccak256\":\"0xa1627944136abede7968f664794f026fcda35be1612c9253481dc87836356050\",\"license\":\"MIT\"},\"interfaces/IEvent.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.4;\\n\\n/* COLLECTION INTERFACE */\\ninterface IEvent {\\n  function initialize(address _organizer, address _auctionContract, string memory _baseMetadataURI) external;\\n\\n  function mint(\\n    address _to,\\n    uint256 _id,\\n    uint256 _amount\\n  ) external;\\n}\",\"keccak256\":\"0xf17fdac1fc7099789c18e824822cdf7a14cf30b69d11081868e8f1560d0567a0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620016a3380380620016a38339818101604052810190620000379190620000dc565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506200010e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000a48262000077565b9050919050565b620000b68162000097565b8114620000c257600080fd5b50565b600081519050620000d681620000ab565b92915050565b600060208284031215620000f557620000f462000072565b5b60006200010584828501620000c5565b91505092915050565b6080516115796200012a600039600061060c01526115796000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806304717aca1461005c5780633b4fb547146100785780637df0bf9514610094578063df7ed279146100b0578063f6ac9361146100cc575b600080fd5b61007660048036038101906100719190610c38565b6100e8565b005b610092600480360381019061008d9190610c8b565b6102c9565b005b6100ae60048036038101906100a99190610c38565b61055c565b005b6100ca60048036038101906100c59190610c38565b6105b6565b005b6100e660048036038101906100e19190610ec6565b6105bb565b005b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054811015610172576040517f95b79dad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020543373ffffffffffffffffffffffffffffffffffffffff16311015610213576040517fe315224600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038d576040517f1e37ef0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548110156105585760005b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002080549050811015610544578273ffffffffffffffffffffffffffffffffffffffff1663156e29f6600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002083815481106104b3576104b2610ffb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460016040518463ffffffff1660e01b81526004016104ff9392919061108d565b600060405180830381600087803b15801561051957600080fd5b505af115801561052d573d6000803e3d6000fd5b50505050808061053c906110f3565b9150506103da565b508080610550906110f3565b915050610390565b5050565b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550505050565b505050565b825184511461060557835183516040517f604cd0690000000000000000000000000000000000000000000000000000000081526004016105fc92919061113c565b60405180910390fd5b60006106307f00000000000000000000000000000000000000000000000000000000000000006109e5565b90508073ffffffffffffffffffffffffffffffffffffffff16634571e3a63330896040518463ffffffff1660e01b815260040161066f939291906111ed565b600060405180830381600087803b15801561068957600080fd5b505af115801561069d573d6000803e3d6000fd5b5050505060006040518060e001604052808981526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018681526020018581526020018481525090508551600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061078e929190610aa0565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906107f2929190610aa0565b50606082015181600301908051906020019061080f929190610b26565b50608082015181600401908051906020019061082c929190610b26565b5060a0820151816005019080519060200190610849929190610b26565b5060c0820151816006019080519060200190610866929190610b26565b5090505033600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b86518110156109765783818151811061090757610906610ffb565b5b6020026020010151600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550808061096e906110f3565b9150506108eb565b50866040516109859190611267565b60405180910390208273ffffffffffffffffffffffffffffffffffffffff167f453e81195773858555ccc0789dabe88873f10681c642e18bac04a531667ef5a8836040516109d39190611454565b60405180910390a35050505050505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a92906114c2565b60405180910390fd5b919050565b828054610aac90611511565b90600052602060002090601f016020900481019282610ace5760008555610b15565b82601f10610ae757805160ff1916838001178555610b15565b82800160010185558215610b15579182015b82811115610b14578251825591602001919060010190610af9565b5b509050610b229190610b73565b5090565b828054828255906000526020600020908101928215610b62579160200282015b82811115610b61578251825591602001919060010190610b46565b5b509050610b6f9190610b73565b5090565b5b80821115610b8c576000816000905550600101610b74565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bcf82610ba4565b9050919050565b610bdf81610bc4565b8114610bea57600080fd5b50565b600081359050610bfc81610bd6565b92915050565b6000819050919050565b610c1581610c02565b8114610c2057600080fd5b50565b600081359050610c3281610c0c565b92915050565b600080600060608486031215610c5157610c50610b9a565b5b6000610c5f86828701610bed565b9350506020610c7086828701610c23565b9250506040610c8186828701610c23565b9150509250925092565b600060208284031215610ca157610ca0610b9a565b5b6000610caf84828501610bed565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d0b82610cc2565b810181811067ffffffffffffffff82111715610d2a57610d29610cd3565b5b80604052505050565b6000610d3d610b90565b9050610d498282610d02565b919050565b600067ffffffffffffffff821115610d6957610d68610cd3565b5b610d7282610cc2565b9050602081019050919050565b82818337600083830152505050565b6000610da1610d9c84610d4e565b610d33565b905082815260208101848484011115610dbd57610dbc610cbd565b5b610dc8848285610d7f565b509392505050565b600082601f830112610de557610de4610cb8565b5b8135610df5848260208601610d8e565b91505092915050565b600067ffffffffffffffff821115610e1957610e18610cd3565b5b602082029050602081019050919050565b600080fd5b6000610e42610e3d84610dfe565b610d33565b90508083825260208201905060208402830185811115610e6557610e64610e2a565b5b835b81811015610e8e5780610e7a8882610c23565b845260208401935050602081019050610e67565b5050509392505050565b600082601f830112610ead57610eac610cb8565b5b8135610ebd848260208601610e2f565b91505092915050565b60008060008060008060c08789031215610ee357610ee2610b9a565b5b600087013567ffffffffffffffff811115610f0157610f00610b9f565b5b610f0d89828a01610dd0565b965050602087013567ffffffffffffffff811115610f2e57610f2d610b9f565b5b610f3a89828a01610dd0565b955050604087013567ffffffffffffffff811115610f5b57610f5a610b9f565b5b610f6789828a01610e98565b945050606087013567ffffffffffffffff811115610f8857610f87610b9f565b5b610f9489828a01610e98565b935050608087013567ffffffffffffffff811115610fb557610fb4610b9f565b5b610fc189828a01610e98565b92505060a087013567ffffffffffffffff811115610fe257610fe1610b9f565b5b610fee89828a01610e98565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61103381610bc4565b82525050565b61104281610c02565b82525050565b6000819050919050565b6000819050919050565b600061107761107261106d84611048565b611052565b610c02565b9050919050565b6110878161105c565b82525050565b60006060820190506110a2600083018661102a565b6110af6020830185611039565b6110bc604083018461107e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110fe82610c02565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611131576111306110c4565b5b600182019050919050565b60006040820190506111516000830185611039565b61115e6020830184611039565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561119f578082015181840152602081019050611184565b838111156111ae576000848401525b50505050565b60006111bf82611165565b6111c98185611170565b93506111d9818560208601611181565b6111e281610cc2565b840191505092915050565b6000606082019050611202600083018661102a565b61120f602083018561102a565b818103604083015261122181846111b4565b9050949350505050565b600081905092915050565b600061124182611165565b61124b818561122b565b935061125b818560208601611181565b80840191505092915050565b60006112738284611236565b915081905092915050565b600082825260208201905092915050565b600061129a82611165565b6112a4818561127e565b93506112b4818560208601611181565b6112bd81610cc2565b840191505092915050565b6112d181610bc4565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61130c81610c02565b82525050565b600061131e8383611303565b60208301905092915050565b6000602082019050919050565b6000611342826112d7565b61134c81856112e2565b9350611357836112f3565b8060005b8381101561138857815161136f8882611312565b975061137a8361132a565b92505060018101905061135b565b5085935050505092915050565b600060e08301600083015184820360008601526113b2828261128f565b91505060208301516113c760208601826112c8565b50604083015184820360408601526113df828261128f565b915050606083015184820360608601526113f98282611337565b915050608083015184820360808601526114138282611337565b91505060a083015184820360a086015261142d8282611337565b91505060c083015184820360c08601526114478282611337565b9150508091505092915050565b6000602082019050818103600083015261146e8184611395565b905092915050565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b60006114ac601683611170565b91506114b782611476565b602082019050919050565b600060208201905081810360008301526114db8161149f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061152957607f821691505b6020821081141561153d5761153c6114e2565b5b5091905056fea2646970667358221220f1169e367d56ed10b5e6d98d77021e494b7e49cc85ae22c7893ad3a08086dca664736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806304717aca1461005c5780633b4fb547146100785780637df0bf9514610094578063df7ed279146100b0578063f6ac9361146100cc575b600080fd5b61007660048036038101906100719190610c38565b6100e8565b005b610092600480360381019061008d9190610c8b565b6102c9565b005b6100ae60048036038101906100a99190610c38565b61055c565b005b6100ca60048036038101906100c59190610c38565b6105b6565b005b6100e660048036038101906100e19190610ec6565b6105bb565b005b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002054811015610172576040517f95b79dad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020543373ffffffffffffffffffffffffffffffffffffffff16311015610213576040517fe315224600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038d576040517f1e37ef0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548110156105585760005b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002080549050811015610544578273ffffffffffffffffffffffffffffffffffffffff1663156e29f6600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002083815481106104b3576104b2610ffb565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460016040518463ffffffff1660e01b81526004016104ff9392919061108d565b600060405180830381600087803b15801561051957600080fd5b505af115801561052d573d6000803e3d6000fd5b50505050808061053c906110f3565b9150506103da565b508080610550906110f3565b915050610390565b5050565b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550505050565b505050565b825184511461060557835183516040517f604cd0690000000000000000000000000000000000000000000000000000000081526004016105fc92919061113c565b60405180910390fd5b60006106307f00000000000000000000000000000000000000000000000000000000000000006109e5565b90508073ffffffffffffffffffffffffffffffffffffffff16634571e3a63330896040518463ffffffff1660e01b815260040161066f939291906111ed565b600060405180830381600087803b15801561068957600080fd5b505af115801561069d573d6000803e3d6000fd5b5050505060006040518060e001604052808981526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018681526020018581526020018481525090508551600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061078e929190610aa0565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906107f2929190610aa0565b50606082015181600301908051906020019061080f929190610b26565b50608082015181600401908051906020019061082c929190610b26565b5060a0820151816005019080519060200190610849929190610b26565b5060c0820151816006019080519060200190610866929190610b26565b5090505033600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060005b86518110156109765783818151811061090757610906610ffb565b5b6020026020010151600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002081905550808061096e906110f3565b9150506108eb565b50866040516109859190611267565b60405180910390208273ffffffffffffffffffffffffffffffffffffffff167f453e81195773858555ccc0789dabe88873f10681c642e18bac04a531667ef5a8836040516109d39190611454565b60405180910390a35050505050505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a92906114c2565b60405180910390fd5b919050565b828054610aac90611511565b90600052602060002090601f016020900481019282610ace5760008555610b15565b82601f10610ae757805160ff1916838001178555610b15565b82800160010185558215610b15579182015b82811115610b14578251825591602001919060010190610af9565b5b509050610b229190610b73565b5090565b828054828255906000526020600020908101928215610b62579160200282015b82811115610b61578251825591602001919060010190610b46565b5b509050610b6f9190610b73565b5090565b5b80821115610b8c576000816000905550600101610b74565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bcf82610ba4565b9050919050565b610bdf81610bc4565b8114610bea57600080fd5b50565b600081359050610bfc81610bd6565b92915050565b6000819050919050565b610c1581610c02565b8114610c2057600080fd5b50565b600081359050610c3281610c0c565b92915050565b600080600060608486031215610c5157610c50610b9a565b5b6000610c5f86828701610bed565b9350506020610c7086828701610c23565b9250506040610c8186828701610c23565b9150509250925092565b600060208284031215610ca157610ca0610b9a565b5b6000610caf84828501610bed565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d0b82610cc2565b810181811067ffffffffffffffff82111715610d2a57610d29610cd3565b5b80604052505050565b6000610d3d610b90565b9050610d498282610d02565b919050565b600067ffffffffffffffff821115610d6957610d68610cd3565b5b610d7282610cc2565b9050602081019050919050565b82818337600083830152505050565b6000610da1610d9c84610d4e565b610d33565b905082815260208101848484011115610dbd57610dbc610cbd565b5b610dc8848285610d7f565b509392505050565b600082601f830112610de557610de4610cb8565b5b8135610df5848260208601610d8e565b91505092915050565b600067ffffffffffffffff821115610e1957610e18610cd3565b5b602082029050602081019050919050565b600080fd5b6000610e42610e3d84610dfe565b610d33565b90508083825260208201905060208402830185811115610e6557610e64610e2a565b5b835b81811015610e8e5780610e7a8882610c23565b845260208401935050602081019050610e67565b5050509392505050565b600082601f830112610ead57610eac610cb8565b5b8135610ebd848260208601610e2f565b91505092915050565b60008060008060008060c08789031215610ee357610ee2610b9a565b5b600087013567ffffffffffffffff811115610f0157610f00610b9f565b5b610f0d89828a01610dd0565b965050602087013567ffffffffffffffff811115610f2e57610f2d610b9f565b5b610f3a89828a01610dd0565b955050604087013567ffffffffffffffff811115610f5b57610f5a610b9f565b5b610f6789828a01610e98565b945050606087013567ffffffffffffffff811115610f8857610f87610b9f565b5b610f9489828a01610e98565b935050608087013567ffffffffffffffff811115610fb557610fb4610b9f565b5b610fc189828a01610e98565b92505060a087013567ffffffffffffffff811115610fe257610fe1610b9f565b5b610fee89828a01610e98565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61103381610bc4565b82525050565b61104281610c02565b82525050565b6000819050919050565b6000819050919050565b600061107761107261106d84611048565b611052565b610c02565b9050919050565b6110878161105c565b82525050565b60006060820190506110a2600083018661102a565b6110af6020830185611039565b6110bc604083018461107e565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110fe82610c02565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611131576111306110c4565b5b600182019050919050565b60006040820190506111516000830185611039565b61115e6020830184611039565b9392505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561119f578082015181840152602081019050611184565b838111156111ae576000848401525b50505050565b60006111bf82611165565b6111c98185611170565b93506111d9818560208601611181565b6111e281610cc2565b840191505092915050565b6000606082019050611202600083018661102a565b61120f602083018561102a565b818103604083015261122181846111b4565b9050949350505050565b600081905092915050565b600061124182611165565b61124b818561122b565b935061125b818560208601611181565b80840191505092915050565b60006112738284611236565b915081905092915050565b600082825260208201905092915050565b600061129a82611165565b6112a4818561127e565b93506112b4818560208601611181565b6112bd81610cc2565b840191505092915050565b6112d181610bc4565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61130c81610c02565b82525050565b600061131e8383611303565b60208301905092915050565b6000602082019050919050565b6000611342826112d7565b61134c81856112e2565b9350611357836112f3565b8060005b8381101561138857815161136f8882611312565b975061137a8361132a565b92505060018101905061135b565b5085935050505092915050565b600060e08301600083015184820360008601526113b2828261128f565b91505060208301516113c760208601826112c8565b50604083015184820360408601526113df828261128f565b915050606083015184820360608601526113f98282611337565b915050608083015184820360808601526114138282611337565b91505060a083015184820360a086015261142d8282611337565b91505060c083015184820360c08601526114478282611337565b9150508091505092915050565b6000602082019050818103600083015261146e8184611395565b905092915050565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b60006114ac601683611170565b91506114b782611476565b602082019050919050565b600060208201905081810360008301526114db8161149f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061152957607f821691505b6020821081141561153d5761153c6114e2565b5b5091905056fea2646970667358221220f1169e367d56ed10b5e6d98d77021e494b7e49cc85ae22c7893ad3a08086dca664736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2099,
        "contract": "contracts/Auction.sol:Auction",
        "label": "addrToEvent",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Event)2092_storage)"
      },
      {
        "astId": 2103,
        "contract": "contracts/Auction.sol:Auction",
        "label": "addrToOrg",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 2107,
        "contract": "contracts/Auction.sol:Auction",
        "label": "addrToNoOfTokenTypes",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2114,
        "contract": "contracts/Auction.sol:Auction",
        "label": "addrToIdToQueue",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))"
      },
      {
        "astId": 2120,
        "contract": "contracts/Auction.sol:Auction",
        "label": "addrToIdToMinBid",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => address[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_struct(Event)2092_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Auction.Event)",
        "numberOfBytes": "32",
        "value": "t_struct(Event)2092_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Event)2092_storage": {
        "encoding": "inplace",
        "label": "struct Auction.Event",
        "members": [
          {
            "astId": 2075,
            "contract": "contracts/Auction.sol:Auction",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 2077,
            "contract": "contracts/Auction.sol:Auction",
            "label": "organizer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 2079,
            "contract": "contracts/Auction.sol:Auction",
            "label": "baseMetadataURI",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 2082,
            "contract": "contracts/Auction.sol:Auction",
            "label": "tokenIds",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 2085,
            "contract": "contracts/Auction.sol:Auction",
            "label": "tokenSupplies",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 2088,
            "contract": "contracts/Auction.sol:Auction",
            "label": "tokenStatus",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 2091,
            "contract": "contracts/Auction.sol:Auction",
            "label": "minBids",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}